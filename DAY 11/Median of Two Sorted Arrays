class Solution {
public:
    double findMedianSortedArrays(vector<int>& a, vector<int>& b) {
        int n=a.size(), m=b.size();
        int len=n+m;
        
        int i=0, j=0, k=0;
        bool found_first=false, found_second=false;
        int first, second;
        while(i<n || j<m){
            k++; // length of merged array
            int val1 = (i<n ? a[i]:INT_MAX);
            int val2 = (j<m ? b[j]:INT_MAX);
            
            int cur;
            if(val1<=val2){
                cur=val1;
                i++;
            }else{
                cur=val2;
                j++;
            }
            
            if(len%2 && k==(len+1)/2) return cur;
            if(len%2==0){
                if(k==len/2) first=cur, found_first=true;
                if(k==len/2 +1) second=cur, found_second=true;
                
                if(found_first && found_second) return (first + second)/(double)2;
            }
        }
        
        return -1;
    }
};
