

class Solution {
public:
    bool check(int n,int k,vector<int>&stalls,int mid){
        int count = 1;
        int temp = stalls[0];
        for(int i=1;i<stalls.size();i++){
            if(abs(stalls[i]-temp)>=mid){
                count++;
                temp = stalls[i];
            }
            if(count==k){
                return true;
            }
        }
        return false;
    }
    int solve(int n, int k, vector<int> &stalls) {
        sort(stalls.begin(),stalls.end());
        int start = 1;
        int end = *max_element(stalls.begin(),stalls.end());
        int ans = 0;
        while(start<=end){
            int mid = start+(end-start)/2;
            if(check(n,k,stalls,mid)){
                ans = mid;
                start=mid+1;
            }
            else{
                end=mid-1;
            }
        }
        return ans;
    }
};
